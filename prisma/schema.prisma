// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @unique
  username  String?
  email  String @unique
  password String
  iconIcon String?
  iconBg String?
  userChats UserChat[] @relation("userChats")
  messages Message[] @relation("WrittenBy")
}

model Message {
  id String @id @unique
  user   User   @relation("WrittenBy", fields: [author], references: [id])
  author String
  date DateTime
  chat Chat  @relation("ChatId", fields: [chatId], references: [id])
  chatId   String
  text String
  dateEdited DateTime?
  status String @default("live")
  lastSentInChat Chat? @relation("lastMessage")
  lastReadInChat UserChat? @relation("lastReadMessage")
}

model Chat {
  id String @id @unique
  iconIcon String?
  iconBg String?
  description String?
  chatName String?
  type String @default("private_chat")
  messages Message[]  @relation("ChatId")
  userChat UserChat? @relation("userChat")
  lastSentMessage Message? @relation("lastMessage", fields:[lastSent], references:[id])
  lastSent String? @unique
}

model UserChat {
  id String @id @unique
  user User @relation("userChats" , fields:[userId], references: [id])
  userId String @unique 
  chat Chat? @relation("userChat" , fields:[chatId], references:[id])
  chatId String @unique
  isAdmin Boolean @default(false)
  lastReadMessage Message? @relation("lastReadMessage", fields:[lastRead], references:[id])
  lastRead String? @unique
  theme String?
  deleted Boolean?
}